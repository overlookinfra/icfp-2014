DUM 4 ; #prelude
LDF 8 ; load %
LDF 16 ; load nth
LDF 29 ; load step
LDF 48 ; load main
LDF 48 ; load main
RAP 4
RTN
LD 0 0 ; (x - ((x / y) * y)) #% #mod
LD 0 0
LD 0 1 ; load y
DIV
LD 0 1
MUL
SUB
RTN
LD 0 0 ; load list #nth
LD 0 1 ; load n
LDC 0
CGT
TSEL 21 27
CDR ; then #nth-recur
LD 0 1 ; dec n
LDC 1
SUB
LDF 16
TAP 2
CAR ; else #nth-base
RTN
LD 0 0 ; load var state ; #step
LD 0 1 ; load var world
LDC 2
LD 1 1 ; load fn nth
AP 2
LDC 0
LD 1 1 ; load fn nth
AP 2
LDC 1
LD 1 1 ; load fn nth
AP 2
LDC 0
LD 1 1 ; load fn nth
AP 2
LDC 4
LD 1 0 ; load fn %
AP 2
CONS
RTN
LDC 0 ; #main
LD 0 2 ; load fn step
CONS
RTN
