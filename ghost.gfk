;;; DEFINE GLOBALS
LAMBDA-POS $lambda[x],$lambda[y]
MY-POS $ghost[x],$ghost[y]
MY-STAT $ghost-status,$ghost-dir
INT 3                           ; get my index in A
MOV $my-index,A

JMP @choose-mode

;;; INIT
MOV $base-counter,20            ;#init
MUL $chase-counter,$my-index
ADD $chase-counter,$base-counter

MOV $random-counter,$base-counter
INC $mode
MOD-> $tmp-mode,$mode,2
MOV $mode,$tmp-mode

JEQ @chase-mode,$mode,0        ;if chase = 1, jump to chase-mode #choose-mode
JMP @random-mode                 ;otherwise we're in random-mode

;;; DEFINE "FUNCTIONS"
MOV B,$proposed-dir                                    ;#cleanup
MOV C,$ghost-dir
MOV D,$mode
MOV E,$chase-counter
MOV F,$random-counter
INT 8
HLT

MOV $proposed-dir,0                                          ;#move-up
JMP @panicmode

MOV $proposed-dir,1                                          ;#move-right
JMP @panicmode

MOV $proposed-dir,2                                          ;#move-down
JMP @panicmode

MOV $proposed-dir,3                                          ;#move-left
JMP @panicmode

JGT @move-left,$ghost[x],$lambda[x]             ; #move-x
JMP @move-right

JGT @move-up,$ghost[y],$lambda[y]               ; #move-y
JMP @move-down

JEQ @dontbacktrack,$ghost-status,0          ; #panicmode
INC $proposed-move
INC $proposed-move
MOD-> A,$proposed-move,4
INT 0
JMP @cleanup

ADD-> $sum-of-dirs,$ghost-dir,$proposed-dir ; #dontbacktrack
MOD-> $backtrack,$sum-of-dirs,2
JEQ @veto,$backtrack,0
MOV A,$proposed-dir
INT 0
JMP @cleanup

MOV $tmp-proposed-dir,$proposed-dir ; #veto
INC $tmp-proposed-dir
MOD-> A,$tmp-proposed-dir,4
INT 0
JMP @cleanup

        ;; CHASE MODE
;;;             GET XDIST
;;; unless $ghost[x] > $lambda[x]
;;;   $xdist = $lambda[x] - $ghost[x]
;;; else
;;;   $xdist = $ghost[x] - $lambda[x]
JEQ @init,$chase-counter,0      ; #chase-mode
DEC $chase-counter
JGT @if-ghost[x]-bigger,$ghost[x],$lambda[x]
SUB-> $xdist,$lambda[x],$ghost[x]
JMP @store-y-dist
SUB-> $xdist,$ghost[x],$lambda[x]                         ; else #if-ghost[x]-bigger then A = C - A

;;;              GET YDIST
;;; unless $ghost[y] > $lambda[y]
;;;   $ydist = $lambda[y] - $ghost[y]
;;; else
;;;   $ydist = $ghost[y] - $lambda[y]
JGT @if-ghost[y]-bigger,$ghost[y],$lambda[y]    ; #store-y-dist
SUB-> $ydist,$lambda[y],$ghost[y]
JMP @choose-move
SUB-> $ydist,$ghost[y],$lambda[y]                        ; else #if-ghost[y]-bigger then A = C - A
JMP @choose-move


        ;; CHOOSE YOUR MOVE
JGT @move-x,$xdist,$ydist                       ;if x-dist > y-dist then move-x #choose-move
JMP @move-y                                     ;else move-y

        ;; RANDOM MODE
JEQ @init,$random-counter,0     ; #random-mode
DEC $random-counter
MUL-> $prandom,$ghost[x],$lambda[y]
MUL-> $prandom,$ghost-dir,$lambda[x]
MOD-> $new-dir,$prandom,4
MOV $proposed-dir,$new-dir
JMP @panicmode
